<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Approve.Text" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="cmdAdd.Text" xml:space="preserve">
    <value>Add Blog</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ServerError.Text" xml:space="preserve">
    <value>An error occurred while processing the request. Please try again later.</value>
  </data>
  <data name="ServerErrorWithDescription.Text" xml:space="preserve">
    <value>An error occurred while processing the request: </value>
  </data>
  <data name="Blog.Header" xml:space="preserve">
    <value>Blog</value>
  </data>
  <data name="Date.Header" xml:space="preserve">
    <value>Publish On</value>
  </data>
  <data name="Published.Header" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="Title.Header" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Actions.Header" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="ApproveEntry.Text" xml:space="preserve">
    <value>Approve this post?</value>
  </data>
  <data name="DeleteEntry.Text" xml:space="preserve">
    <value>Delete this post?</value>
  </data>
  <data name="lblAllowAllLocales.Help" xml:space="preserve">
    <value>If selected users can opt that their blog is in a language that is not part of the portal languages set. Otherwise it is restricted to one of the portal languages.</value>
  </data>
  <data name="lblAllowAllLocales.Text" xml:space="preserve">
    <value>Allow All Languages</value>
  </data>
  <data name="lblAllowAttachments.Help" xml:space="preserve">
    <value>If selected bloggers can upload files for a blog post</value>
  </data>
  <data name="lblAllowAttachments.Text" xml:space="preserve">
    <value>Allow Attachments</value>
  </data>
  <data name="lblAllowMultipleCategories.Help" xml:space="preserve">
    <value>Allow bloggers to select more than one category for their posts</value>
  </data>
  <data name="lblAllowMultipleCategories.Text" xml:space="preserve">
    <value>Allow Multiple Categories</value>
  </data>
  <data name="lblAllowWLW.Help" xml:space="preserve">
    <value>If selected bloggers may connect and blog using Windows Live Writer</value>
  </data>
  <data name="lblAllowWLW.Text" xml:space="preserve">
    <value>Allow Windows Live Writer</value>
  </data>
  <data name="lblEmail.Help" xml:space="preserve">
    <value>This email address will be used in the RSS feed as the 'managing editor' of the blogs in this module</value>
  </data>
  <data name="lblEmail.Text" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="lblUseSummary.Help" xml:space="preserve">
    <value>When selected users can define a summary for their post. In Windows Live Writer bloggers can specify an 'excerpt' which does the same.</value>
  </data>
  <data name="lblUseSummary.Text" xml:space="preserve">
    <value>Use Summary</value>
  </data>
  <data name="lblVocabularyId.Help" xml:space="preserve">
    <value>Select the vocabulary to use for storing the categories of this module and all its blogs</value>
  </data>
  <data name="lblVocabularyId.Text" xml:space="preserve">
    <value>Category Vocabulary</value>
  </data>
  <data name="lblWLWRecentEntriesMax.Help" xml:space="preserve">
    <value>This is the maximum number of (recent) blog posts that can be downloaded by Windows Live Writer for editing.</value>
  </data>
  <data name="lblWLWRecentEntriesMax.Text" xml:space="preserve">
    <value>WLW Max Recent Entries</value>
  </data>
  <data name="NoneSpecified.Text" xml:space="preserve">
    <value>&lt; None Specified &gt;</value>
  </data>
  <data name="HtmlIndependent.Opt" xml:space="preserve">
    <value>HTML independent from body of post</value>
  </data>
  <data name="HtmlPrecedesPost.Opt" xml:space="preserve">
    <value>HTML precedes post</value>
  </data>
  <data name="PlainTextIndependent.Opt" xml:space="preserve">
    <value>Plain text independent from body of post</value>
  </data>
  <data name="lblSummaryModel.Help" xml:space="preserve">
    <value>Select how you want the summary to behave and what format it should be</value>
  </data>
  <data name="lblSummaryModel.Text" xml:space="preserve">
    <value>Summary Model</value>
  </data>
</root>